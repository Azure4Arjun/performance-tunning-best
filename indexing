/*
	Title:       How are indexes being used
	Created by:  Mark S. Rasmussen <mark@improve.dk>
	License:     CC BY 3.0
*/

WITH TMP AS (
	SELECT
		d.name,
		OBJECT_NAME(s.object_id) AS object_name,
		ISNULL(i.name, '(Heap)') AS index_name,
		user_seeks,
		user_scans,
		user_lookups,
		user_seeks + user_scans + user_lookups as total_reads,
		user_updates,
		CASE
			WHEN (user_seeks + user_scans + user_lookups = 0) THEN
				'UNUSED'
			WHEN (user_seeks + user_scans < user_updates) THEN
				'UPDATES > READS'
			WHEN (user_seeks < user_scans) THEN
				'SCANS > SEEKS'
			ELSE
				' '
		END AS Warning
	FROM
		sys.dm_db_index_usage_stats s
	INNER JOIN
		sys.indexes i ON
			i.object_id = s.object_id AND
			i.index_id = s.index_id
	INNER JOIN
		sys.databases d ON
			d.database_id = s.database_id
	WHERE
		d.name = DB_NAME() AND
		OBJECTPROPERTY(s.object_id, 'IsUserTable') = 1
)
SELECT * FROM TMP

-- Top scanned indexes
ORDER BY user_scans DESC

-- Bookmark lookups
ORDER BY user_lookups DESC

-- Write-only indexes
WHERE total_reads = 0


/*
	Created by:  Mark S. Rasmussen <mark@improve.dk>
	License:     CC BY 3.0
*/

WITH TMP AS
(
	SELECT
		DB_NAME(database_id) AS database_name,
		OBJECT_NAME(object_id) AS table_name,
		(SELECT Name FROM sys.indexes WHERE index_id = ps.index_id AND object_id = ps.object_id) AS index_name,
		index_type_desc,
		alloc_unit_type_desc,
		avg_fragmentation_in_percent,
		fragment_count,
		avg_fragment_size_in_pages,
		page_count,
		page_count * 8 / 1024 AS 'disk size MB',
		avg_page_space_used_in_percent,
		record_count,
		min_record_size_in_bytes,
		avg_record_size_in_bytes,
		CASE
			WHEN avg_fragmentation_in_percent BETWEEN 0 AND 30 THEN
				'REORGANIZE'
			ELSE
				'REBUILD'
		END AS recommendation
	FROM
		sys.dm_db_index_physical_stats (DB_ID(), NULL, NULL, NULL, 'SAMPLED') ps
	WHERE
		avg_fragmentation_in_percent > 5 AND
		page_count >= 2560 -- We don't care about objects less than 20MB
),
TMP2 AS
(
	SELECT
		*,
		'ALTER INDEX [' + index_name + '] ON dbo.[' + table_name + '] REORGANIZE' AS sql_reorganize,
		'ALTER INDEX [' + index_name + '] ON dbo.[' + table_name + '] REBUILD' AS sql_rebuild
	FROM
		TMP
)
SELECT
	*,
	CASE recommendation
		WHEN 'REBUILD' THEN
			sql_rebuild
		ELSE
			sql_reorganize
	END AS sql_recommended
FROM
	TMP2
ORDER BY
	avg_fragmentation_in_percent DESC



	/*
	Created by:  Mark S. Rasmussen <mark@improve.dk>
	License:     CC BY 3.0
	
	Warning - these suggestions should be taken with a ton of salt!
*/

SELECT DISTINCT TOP 50
	d.index_handle,
	d.statement AS table_name,
	s.unique_compiles,
	s.user_seeks,
	s.last_user_seek,
	s.avg_total_user_cost,
	s.avg_user_impact,
	d.equality_columns,
	d.inequality_columns,
	d.included_columns,
	s.avg_total_user_cost + s.avg_user_impact + (s.user_seeks + s.user_scans) AS score
FROM
	sys.dm_db_missing_index_details d
CROSS APPLY
	sys.dm_db_missing_index_columns (d.index_handle)
INNER JOIN
	sys.dm_db_missing_index_groups g ON
		g.index_handle = d.index_handle
INNER JOIN
	sys.dm_db_missing_index_group_stats s ON
		s.group_handle = g.index_group_handle
WHERE
	DB_NAME(d.database_id) = DB_NAME()
ORDER BY
	s.avg_total_user_cost + s.avg_user_impact + (s.user_seeks + s.user_scans) DESC
